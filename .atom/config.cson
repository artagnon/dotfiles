"*":
  "advanced-open-file":
    createDirectories: true
    fuzzyMatch: true
    helmDirSwitch: true
  "atom-beautify":
    bash:
      beautify_on_save: true
    cpp:
      beautify_on_save: true
      default_beautifier: "clang-format"
      disabled: true
    general:
      _analyticsUserId: "172b6ea9-0fdb-447b-900b-049234b79a2b"
      showLoadingView: false
    haskell:
      disabled: true
    html:
      beautify_on_save: true
    js:
      beautify_on_save: true
    json:
      beautify_on_save: true
      brace_style: "expand"
    markdown:
      beautify_on_save: true
    ocaml:
      beautify_on_save: true
    perl:
      beautify_on_save: true
      disabled: true
    python:
      beautify_on_save: true
      max_line_length: 100
    rust:
      beautify_on_save: true
    yaml:
      disabled: true
  "atom-format": {}
  "atom-fuzzy-grep":
    grepCommandString: "/usr/local/bin/ag -i --nocolor --nogroup --column"
  "atom-perforce":
    autoAdd: true
    autoEdit: true
  "atom-terminal-panel": {}
  "atomic-emacs":
    alwaysUseKillRing: true
  "atomic-rtags":
    rcExecutable: "/home/rramacha/bin/mw/rc"
  "autocomplete-haskell":
    completionBackendInfo: false
  "clang-format":
    executable: "/usr/local/bin/clang-format"
    formatCOnSave: true
    formatCPlusPlusOnSave: true
    formatJavaOnSave: true
    formatJavascriptOnSave: true
    formatObjectiveCOnSave: true
  "clipboard-plus": {}
  core:
    audioBeep: false
    disabledPackages: [
      "language-gfm"
      "vim-mode-plus"
      "autocomplete-clang"
    ]
    openEmptyEditorOnStart: false
    packagesWithKeymapsDisabled: [
      "emacs-flow"
      "clipboard-plus"
    ]
    projectHome: "~/src"
    telemetryConsent: "limited"
    themes: [
      "material-ui"
      "material-syntax"
    ]
  editor:
    fontSize: 12
    invisibles: {}
    preferredLineLength: 100
  "exception-reporting":
    userId: "eff40292-48c0-c335-72c9-7e123750c70f"
  "formatter-clang-format":
    executablePath: "/Users/artagnon/bin/clang-format"
  "fuzzy-finder":
    useAlternateScoring: true
  "haskell-ghc-mod": {}
  "ide-haskell":
    onCursorMove: "Show Tooltip"
    onSavePrettify: true
  "julia-client":
    juliaOptions:
      optimisationLevel: 1
  "linter-ui-default":
    panelHeight: 300
  megafinder:
    MWspecifics:
      dirNarrowing: "matlab/src/cg_ir matlab/src/cgir_vm matlab/src/cgir_vm_rt matlab/src/cgir_xform matlab/src/cgir_support matlab/src/emlcoder matlab/src/cgir_cgel matlab/src/cgir_tests matlab/src/cgir_polly"
    patternNarrowing: "*.cpp *.hpp *.h"
  minimap:
    plugins:
      "find-and-replace": true
      selection: true
  "node-debugger":
    nodePath: "/usr/local/bin/node"
  term3: {}
  "vim-mode":
    useClipboardAsDefaultRegister: true
  "vim-mode-clipboard-plus":
    useVimModePlus: true
  "vim-mode-plus":
    incrementalSearch: true
    useClipboardAsDefaultRegister: true
    useSmartcaseForSearch: true
    useSmartcaseForSearchCurrentWord: true
  welcome:
    showOnStartup: false
  "you-complete-me":
    globalExtraConfig: "~/.ycm_extra_conf.py"
    pythonExecutable: "/usr/local/bin/python2.7"
".c2hs.source":
  editor:
    autoIndent: true
    autoIndentOnPaste: true
".cabal.source":
  editor:
    autoIndent: true
    autoIndentOnPaste: true
".haskell.source":
  editor:
    autoIndent: true
    autoIndentOnPaste: true
".hsig.source":
  editor:
    autoIndent: true
    autoIndentOnPaste: true
".idris.source":
  editor:
    autoIndentOnPaste: false
